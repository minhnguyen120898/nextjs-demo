{
  "info": {
    "title": "GOLMO",
    "description": "This is a sample Petstore server. You can find \nout more about Swagger at \n[http://swagger.io](http://swagger.io) or on \n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "version": "1.0.0",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "thonguyen140294@rionlab.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "swagger": "2.0",
  "host": "54.174.194.79:9055",
  "basePath": "/",
  "tags": [
    {
      "name": "common",
      "description": "using for all user"
    },
    {
      "name": "user",
      "description": "using for all user"
    },
    {
      "name": "admin",
      "description": "using for admin"
    }
  ],
  "paths": {
    "/resend/active": {
      "post": {
        "tags": [
          "common"
        ],
        "summary": "resend code active",
        "operationId": "resendActive",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "auth",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "encode(phone:country_code)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Message_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/register/create": {
      "post": {
        "tags": [
          "common"
        ],
        "summary": "Create new user",
        "operationId": "create",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "auth",
            "description": "encode(phone:country_code)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        }
      }
    },
    "/register/web": {
      "post": {
        "tags": [
          "common"
        ],
        "summary": "Create new user by web",
        "operationId": "createByWeb",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "NOTE:\nsex: 1 - male, 2 - female",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Register_Web_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        }
      }
    },
    "/register/active": {
      "post": {
        "tags": [
          "common"
        ],
        "summary": "active account",
        "operationId": "activeAccount",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "auth",
            "description": "encode(phone:country_code)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "NOTE: encode password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Active_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        }
      }
    },
    "/register/update": {
      "post": {
        "tags": [
          "common"
        ],
        "summary": "update account",
        "operationId": "updateAccount",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "auth",
            "description": "encode(phone:country_code)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "NOTE: encode password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_Register_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Message_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "common"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth",
            "description": "encode(phone:country_code:password)",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select language return message",
            "default": "en"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Login_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "common"
        ],
        "summary": "logout",
        "operationId": "logout",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "token",
            "required": true,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Select language return message",
            "default": "en"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Message_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/verify/name/{nick_name}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "check name",
        "operationId": "checkName",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "nick_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Check_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/verify/profile": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get profile",
        "operationId": "getVerifyProfile",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Verify_Profile_Request"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "verify profile",
        "operationId": "verifyProfile",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "sex:\n1 - male\n2 - female",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Verify_Profile_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Message_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get profile",
        "operationId": "getProfile",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Profile_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update profile",
        "operationId": "getProfile",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Update_Profile_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Profile_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/kyc": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update kyc",
        "operationId": "update kyc",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "NOTE: encode bank info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Kyc_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Message_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get users",
        "operationId": "get users",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sex",
            "in": "query",
            "required": false,
            "description": "1 - male\n2 - female",
            "type": "integer"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "age",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gol_point",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gol_area",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gol_exp",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "match_until",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "match_how",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "match_play",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "match_expense",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "match_trans",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Users_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/users/{user_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get user detail",
        "operationId": "getUserDetail",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/User_Detail_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/conversations": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get conversations",
        "operationId": "getConversations",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Conversations_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/conversation/create": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "create conversations",
        "operationId": "createConversation",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create_Conversation_Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Conversations_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/conversations/{conversation_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get conversation by id",
        "operationId": "getConversationById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Conversation_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/list/prefectures/jp": {
      "get": {
        "tags": [
          "common"
        ],
        "summary": "get prefectures jp",
        "operationId": "getprefecturesjp",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Prefectures_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/list/settings": {
      "get": {
        "tags": [
          "common"
        ],
        "summary": "get settings",
        "operationId": "getSettings",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Experience_Settings_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/list/bank/jp/name": {
      "get": {
        "tags": [
          "common"
        ],
        "summary": "get jp bank name",
        "operationId": "getJPBankName",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Bank_Name_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    },
    "/list/bank/jp/branch/{bank_code}": {
      "get": {
        "tags": [
          "common"
        ],
        "summary": "get jp bank branch",
        "operationId": "getJPBankBranch",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "locale",
            "default": "en",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "bank_code",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/Bank_Name_Response"
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/Error_Response"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "definitions": {
    "Message_Response": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Error_Response": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "Login_Response": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        }
      }
    },
    "Active_Request": {
      "type": "object",
      "properties": {
        "verify_code": {
          "type": "string"
        }
      }
    },
    "Register_Web_Request": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "sex": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "gol_point": {
          "type": "string"
        },
        "gol_area": {
          "type": "string"
        },
        "gol_exp": {
          "type": "string"
        },
        "gol_round": {
          "type": "string"
        },
        "gol_history": {
          "type": "string"
        }
      }
    },
    "Update_Register_Request": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "Check_Response": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "integer"
        }
      }
    },
    "Verify_Profile_Request": {
      "type": "object",
      "properties": {
        "nick_name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "sex": {
          "type": "integer"
        },
        "birthday": {
          "type": "integer"
        },
        "gol_point": {
          "type": "integer"
        },
        "gol_area": {
          "type": "integer"
        },
        "gol_exp": {
          "type": "integer"
        }
      }
    },
    "Update_Profile_Request": {
      "type": "object",
      "properties": {
        "main_photo": {
          "type": "string"
        },
        "sub_photos": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "birthday": {
          "type": "integer"
        },
        "gol_point": {
          "type": "integer"
        },
        "gol_area": {
          "type": "integer"
        },
        "gol_exp": {
          "type": "integer"
        },
        "match_until": {
          "type": "integer"
        },
        "match_how": {
          "type": "integer"
        },
        "match_play": {
          "type": "integer"
        },
        "match_expense": {
          "type": "integer"
        },
        "match_trans": {
          "type": "integer"
        }
      }
    },
    "Profile_Response": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "sex": {
          "type": "integer"
        },
        "birthday": {
          "type": "integer"
        },
        "gol_point": {
          "type": "integer"
        },
        "gol_area": {
          "type": "integer"
        },
        "gol_exp": {
          "type": "integer"
        },
        "kyc": {
          "type": "object",
          "properties": {
            "front": {
              "type": "string"
            },
            "back": {
              "type": "string"
            },
            "round_amount": {
              "type": "string"
            },
            "round_type": {
              "type": "string"
            },
            "round_message": {
              "type": "string"
            },
            "prac_amount": {
              "type": "string"
            },
            "prac_message": {
              "type": "string"
            },
            "bank_name": {
              "type": "string"
            },
            "bank_banch": {
              "type": "string"
            },
            "bank_type": {
              "type": "string"
            },
            "bank_number": {
              "type": "string"
            },
            "bank_account": {
              "type": "string"
            }
          }
        },
        "type": {
          "type": "integer"
        },
        "role": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "created_at": {
          "type": "integer"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "Kyc_Request": {
      "type": "object",
      "properties": {
        "front": {
          "type": "string"
        },
        "back": {
          "type": "string"
        },
        "round_amount": {
          "type": "string"
        },
        "round_type": {
          "type": "string"
        },
        "round_message": {
          "type": "string"
        },
        "prac_amount": {
          "type": "string"
        },
        "prac_message": {
          "type": "string"
        },
        "bank_name": {
          "type": "string"
        },
        "bank_banch": {
          "type": "string"
        },
        "bank_type": {
          "type": "string"
        },
        "bank_number": {
          "type": "string"
        },
        "bank_account": {
          "type": "string"
        }
      }
    },
    "Prefectures_Response": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Bank_Name_Response": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      }
    },
    "Experience_Settings_Response": {
      "type": "object",
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "areas": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "years": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Users_Response": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "docs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "main_photo": {
                "type": "string"
              },
              "nick_name": {
                "type": "string"
              },
              "sex": {
                "type": "integer"
              },
              "birthday": {
                "type": "integer"
              },
              "city": {
                "type": "string"
              },
              "gol_point": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "User_Detail_Response": {
      "type": "object",
      "properties": {
        "main_photo": {
          "type": "string"
        },
        "sub_photos": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "sex": {
          "type": "integer"
        },
        "birthday": {
          "type": "integer"
        },
        "city": {
          "type": "string"
        },
        "gol_point": {
          "type": "string"
        },
        "gol_area": {
          "type": "string"
        },
        "gol_exp": {
          "type": "string"
        },
        "match_until": {
          "type": "string"
        },
        "match_how": {
          "type": "string"
        },
        "match_play": {
          "type": "string"
        },
        "match_expense": {
          "type": "string"
        },
        "match_trans": {
          "type": "string"
        }
      }
    },
    "Conversations_Response": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "docs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "conversation": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "category": {
                    "type": "integer"
                  }
                }
              },
              "messsage": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              },
              "seen": {
                "type": "integer"
              },
              "seen_at": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "Conversation_Response": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "category": {
          "type": "integer"
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "seen_at": {
                "type": "integer"
              },
              "created_at": {
                "type": "integer"
              },
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "nick_name": {
                    "type": "string"
                  },
                  "main_photo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "messages": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer"
            },
            "page": {
              "type": "integer"
            },
            "limit": {
              "type": "integer"
            },
            "docs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "integer"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "nick_name": {
                        "type": "string"
                      },
                      "main_photo": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Create_Conversation_Request": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        }
      }
    }
  }
}